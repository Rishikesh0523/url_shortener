name: CI/CD for URL Shortener

on:
  push:
    branches:
      - main  # Trigger workflow on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger workflow on pull requests to the main branch

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Set environment variables
      - name: Set environment variables
        run: echo "Environment variables set"
        env:
          project_name: "URL Shortener"
          database_url: "sqlite:///./test.db"
          secret_key: "test-secret-key"

      # Step 5: Set PYTHONPATH
      - name: Set PYTHONPATH for module discovery
        run: echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE" >> $GITHUB_ENV

      # Step 6: Debug environment variables (Optional - for debugging purposes)
      - name: Debug environment
        run: |
          echo "Project Name: $project_name"
          echo "Database URL: $database_url"
          echo "Secret Key: $secret_key"

      # Step 7: Run tests
      - name: Run tests
        env:
          project_name: "URL Shortener"
          database_url: "sqlite:///./test.db"
          secret_key: "test-secret-key"
        run: pytest

  lint:
    name: Run Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run Flake8
        run: flake8 --max-line-length=88 .
        continue-on-error: true

  dockerize:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test  # Run this job only if the 'test' job succeeds

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/url_shortener:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/url_shortener:latest